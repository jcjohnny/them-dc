---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
import IntroAnimation from "../components/IntroAnimation.astro";
import BGGradient from "../components/GradientBG.astro";
import LogoBar from "../components/LogoBar.astro";
import LogoBarTop from "../components/LogoBarTop.astro";
import Intro from "../components/Intro.astro";
import VideoCopyOne from "../components/VideoCopyOne.astro";
import FullGalleryScroll from "../components/FullGalleryScroll.astro";
import VideoCopyTwo from "../components/VideoCopyTwo.astro";
import StackingImages from "../components/StackingImages.astro";
import HorizontalScroll from "../components/HorizontalScroll.astro";
import Stats from "../components/Stats.astro";

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout>
  <!-- <IntroAnimation /> -->
  <div class="main-content">
    <div
      class="z-20 absolute md:top-5 top-7 w-full flex flex-row justify-center items-center flex-wrap md:h-[110px] h-[50px] gap-7"
    >
      <LogoBarTop />
    </div>
    <Intro />
    <VideoCopyOne />
    <FullGalleryScroll />
    <VideoCopyTwo />
    <StackingImages />
    <HorizontalScroll />
    <Stats />
    <div
      class="z-20 relative bottom-10 w-full flex flex-row justify-center items-center flex-wrap h-[110px] gap-7 py-4"
    >
      <LogoBar />
    </div>
  </div>
  <BGGradient />
</Layout>

<style is:global>
  *,
  *::after,
  *::before {
    box-sizing: border-box;
  }

  :root {
    font-size: 16px;
    --color-text: #000;
    --color-bg: #fff;
    --color-link: #000;
    --color-link-hover: #000;
    --img-ratio: 1.5;
    --s: 1;
  }

  body {
    margin: 0;
    color: black;
    background-color: white;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    height: 100%;
    width: 100%;
    overflow-x: hidden;
    font-family: "Apercu Regular";
  }

  h3 {
    font-family: "Apercu Bold";
  }

  .apercu-r {
    font-family: "Apercu Regular";
  }
  .apercu-b {
    font-family: "Apercu RegulBoldar";
  }

  h4 {
    font-family: "Playfair";
  }

  h4 span {
    font-style: italic;
  }

  .noshowintro {
    opacity: 0;
  }
  .noscrollintro {
    overflow: hidden;
  }

  .showdesktop {
    display: block;
  }
  .showmobile {
    display: none;
  }

  @media screen and (max-width: 500px) {
    .showdesktop {
      display: none;
    }
    .showmobile {
      display: block;
    }
  }

  @font-face {
    font-family: "Apercu Bold";
    src: url("../fonts/apercu-bold.woff2") format("woff2");
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Apercu Regular";
    src: url("../fonts/apercu-regular.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Playfair Light";
    src: url("../fonts/Playfair_9pt-Light.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Playfair Light Italic";
    src: url("../fonts/Playfair_9pt-LightItalic.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import Lenis from "lenis";

  gsap.registerPlugin(ScrollTrigger);
  ScrollTrigger.normalizeScroll(true);

  let lenis: any;

  // Function to initialize Lenis for smooth scrolling
  const initSmoothScrolling = () => {
    // Instantiate the Lenis object with specified properties
    lenis = new Lenis({
      lerp: 0.15, // Lower values create a smoother scroll effect
      smoothWheel: true, // Enables smooth scrolling for mouse wheel events
    });

    // Update ScrollTrigger each time the user scrolls
    lenis.on("scroll", () => ScrollTrigger.update());

    // Define a function to run at each animation frame
    const scrollFn = (time: any) => {
      lenis.raf(time); // Run Lenis' requestAnimationFrame method
      requestAnimationFrame(scrollFn); // Recursively call scrollFn on each frame
    };
    // Start the animation frame loop
    requestAnimationFrame(scrollFn);
  };

  initSmoothScrolling(); // Initialize Lenis for smooth scrolling
</script>
